{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Elements\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\n// Init flatpickr\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n\n    if (pickedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = pickedDate;\n      startBtn.disabled = false;\n    }\n  },\n});\n\n// Event start\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      input.disabled = false;\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimerUI(time);\n  }, 1000);\n});\n\n// Functions\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = days;\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","input","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","selectedDates","pickedDate","diff","updateTimerUI","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"oDACA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAGd,UAAUN,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAE9BC,GAAc,IAAI,MACpB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAS,SAAW,KAEpBM,EAAmBG,EACnBT,EAAS,SAAW,GAEvB,CACH,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAC1B,MAAMG,EAAOJ,EAAmB,IAAI,KAEpC,GAAII,GAAQ,EAAG,CACb,cAAcH,CAAO,EACrBI,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3DV,EAAM,SAAW,GACjB,MACD,CAED,MAAMW,EAAOC,EAAUH,CAAI,EAC3BC,EAAcC,CAAI,CACnB,EAAE,GAAI,EACT,CAAC,EAGD,SAASD,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDf,EAAO,YAAcY,EACrBX,EAAQ,YAAce,EAAeH,CAAK,EAC1CX,EAAU,YAAcc,EAAeF,CAAO,EAC9CX,EAAU,YAAca,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}